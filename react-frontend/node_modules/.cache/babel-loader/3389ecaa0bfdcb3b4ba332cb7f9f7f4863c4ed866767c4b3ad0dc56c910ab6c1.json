{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tadiwa.muguta\\\\Desktop\\\\Projects\\\\Finance Management\\\\financial_management_app\\\\react-frontend\\\\src\\\\Components\\\\AddRevenueModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../Styling/AddRevenueModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRevenueModal = ({\n  isOpen,\n  onClose,\n  onAddRevenue\n}) => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch user ID from localStorage when the component mounts\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('id'); // Assuming userId is stored in localStorage\n    if (storedUserId) {\n      setUserId(storedUserId);\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous error messages before submitting\n\n    if (!userId) {\n      console.error(\"User ID not available.\");\n      return;\n    }\n\n    // Prepare the revenue data object, including userId\n    const revenueData = {\n      amount: Number(amount),\n      // Ensure amount is a number\n      category,\n      description,\n      date,\n      user: {\n        id: userId // Pass user ID as part of the revenue object\n      }\n    };\n    try {\n      await onAddRevenue(revenueData); // Pass the revenue data to the parent handler\n      onClose(); // Close the modal after submission\n    } catch (error) {\n      var _error$response;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"An error occurred while adding the revenue.\");\n    }\n  };\n  if (!isOpen) return null; // Don't render if modal is not open\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Revenue Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit\",\n          children: \"Add Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRevenueModal, \"J2qHZBxMeyN0BkBV42rE4YJXyN4=\");\n_c = AddRevenueModal;\nexport default AddRevenueModal;\nvar _c;\n$RefreshReg$(_c, \"AddRevenueModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddRevenueModal","isOpen","onClose","onAddRevenue","_s","amount","setAmount","category","setCategory","description","setDescription","date","setDate","userId","setUserId","error","setError","storedUserId","localStorage","getItem","handleSubmit","e","preventDefault","console","revenueData","Number","user","id","_error$response","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tadiwa.muguta/Desktop/Projects/Finance Management/financial_management_app/react-frontend/src/Components/AddRevenueModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../Styling/AddRevenueModal.css';\r\n\r\nconst AddRevenueModal = ({ isOpen, onClose, onAddRevenue }) => {\r\n    const [amount, setAmount] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [userId, setUserId] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    // Fetch user ID from localStorage when the component mounts\r\n    useEffect(() => {\r\n        const storedUserId = localStorage.getItem('id'); // Assuming userId is stored in localStorage\r\n        if (storedUserId) {\r\n            setUserId(storedUserId);\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear previous error messages before submitting\r\n\r\n        if (!userId) {\r\n            console.error(\"User ID not available.\");\r\n            return;\r\n        }\r\n\r\n        // Prepare the revenue data object, including userId\r\n        const revenueData = {\r\n            amount: Number(amount),  // Ensure amount is a number\r\n            category,\r\n            description,\r\n            date,\r\n            user: {\r\n                id: userId,  // Pass user ID as part of the revenue object\r\n            },\r\n        };\r\n\r\n        try {\r\n            await onAddRevenue(revenueData); // Pass the revenue data to the parent handler\r\n            onClose(); // Close the modal after submission\r\n        } catch (error) {\r\n            setError(error.response?.data || \"An error occurred while adding the revenue.\");\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null; // Don't render if modal is not open\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <h2>New Revenue Entry</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Amount:\r\n                        <input \r\n                            type=\"number\" \r\n                            value={amount} \r\n                            onChange={(e) => setAmount(e.target.value)} \r\n                            required \r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Category:\r\n                        <input \r\n                            type=\"text\" \r\n                            value={category} \r\n                            onChange={(e) => setCategory(e.target.value)} \r\n                            required \r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Description:\r\n                        <textarea \r\n                            value={description} \r\n                            onChange={(e) => setDescription(e.target.value)} \r\n                            required \r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Date:\r\n                        <input \r\n                            type=\"date\" \r\n                            value={date} \r\n                            onChange={(e) => setDate(e.target.value)} \r\n                            required \r\n                        />\r\n                    </label>\r\n\r\n                    {/* Display error messages */}\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                    <button type=\"submit\" className=\"submit\">Add Revenue</button>\r\n                    <button type=\"button\" className=\"cancel\" onClick={onClose}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddRevenueModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}