{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tadiwa.muguta\\\\Desktop\\\\Projects\\\\Finance Management\\\\financial_management_app\\\\react-frontend\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Sidebar from \"./Sidebar\";\nimport '../Styling/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    // Retrieve the user's first name and surname from localStorage when the component mounts\n    const storedFirstName = localStorage.getItem('firstName');\n    const storedSurname = localStorage.getItem('surname');\n    const storedUserId = localStorage.getItem('id');\n    if (storedFirstName) {\n      setFirstName(storedFirstName);\n    }\n    if (storedSurname) {\n      setSurname(storedSurname);\n    }\n    if (storedUserId) {\n      setUserId(parseInt(storedUserId, 10));\n    }\n  }, []);\n\n  // Fetch and calculate total revenue for the current month\n  useEffect(() => {\n    const fetchMonthlyTotalRevenue = async () => {\n      if (userId) {\n        try {\n          const response = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\n          const revenues = response.data;\n          const currentMonth = new Date().getMonth();\n          const totalForMonth = revenues.filter(revenue => new Date(revenue.date).getMonth() === currentMonth).reduce((total, revenue) => total + revenue.amount, 0);\n          setTotalRevenue(totalForMonth);\n        } catch (error) {\n          console.error(\"Error fetching revenues: \", error);\n        }\n      }\n    };\n    fetchMonthlyTotalRevenue();\n  }, [userId]);\n\n  // Fetch and calculate total expenses for the current month\n  useEffect(() => {\n    const fetchMonthlyTotalExpenses = async () => {\n      if (userId) {\n        try {\n          const response = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\n          const expenses = response.data;\n          const currentMonth = new Date().getMonth();\n          const totalForMonth = expenses.filter(expense => new Date(expense.date).getMonth() === currentMonth).reduce((total, expense) => total + expense.amount, 0);\n          setTotalExpense(totalForMonth);\n        } catch (error) {\n          console.error(\"Error fetching expenses: \", error);\n        }\n      }\n    };\n    fetchMonthlyTotalExpenses();\n  }, [userId]);\n\n  // Calculate the net balance\n  const netBalance = totalRevenue - totalExpense;\n\n  // Fetch all transactions to display summary (Of the current month) on home page \n  useEffect(() => {\n    const currentMonth = new Date().getMonth() + 1; // Get current month (January = 0)\n\n    // Fetch total revenue and expense for the user\n    const fetchData = async () => {\n      if (userId) {\n        try {\n          // Fetch revenues for the current month\n          const revenueResponse = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\n          const currentMonthRevenues = revenueResponse.data.filter(revenue => new Date(revenue.date).getMonth() + 1 === currentMonth);\n          const totalRevenues = currentMonthRevenues.reduce((acc, revenue) => acc + revenue.amount, 0);\n          setTotalRevenue(totalRevenues);\n\n          // Fetch expenses for the current month\n          const expenseResponse = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\n          const currentMonthExpenses = expenseResponse.data.filter(expense => new Date(expense.date).getMonth() + 1 === currentMonth);\n          const totalExpenses = currentMonthExpenses.reduce((acc, expense) => acc + expense.amount, 0);\n          setTotalExpense(totalExpenses);\n\n          // Combine revenues and expenses into one list\n          const mergedTransactions = [...currentMonthRevenues.map(revenue => ({\n            ...revenue,\n            type: 'Revenue'\n          })), ...currentMonthExpenses.map(expense => ({\n            ...expense,\n            type: 'Expense'\n          }))];\n\n          // Sort by date in descending order (most recent first)\n          const sortedTransactions = mergedTransactions.sort((a, b) => new Date(b.date) - new Date(a.date));\n\n          // Store transactions in state\n          setTransactions(sortedTransactions);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", firstName, \" \", surname, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summarySection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dashboard Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-up\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), \"Total Revenues (Current Month)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"totalRevenue\",\n              children: [\"R\", totalRevenue.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-down\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), \"Total Expenses (Current Month)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"totalExpense\",\n              children: [\"R\", totalExpense.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-check-circle\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), \"Net Balance\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: netBalance > 0 ? 'positiveBalance' : netBalance < 0 ? 'negativeBalance' : 'zeroBalance',\n              children: [\"R\", netBalance.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactionsStatsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transactions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 30\n          }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(transaction.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", transaction.type, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", transaction.description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 41\n              }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" R\", transaction.amount.toLocaleString(), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 41\n              }, this)]\n            }, transaction.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No transactions for the currents month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthlyStatistics\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Monthly Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Statistics for the month will go here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"pGGeqpFZi0i8VLeSzRiqxqYgLqY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","Sidebar","jsxDEV","_jsxDEV","Home","_s","firstName","setFirstName","surname","setSurname","totalRevenue","setTotalRevenue","totalExpense","setTotalExpense","transactions","setTransactions","userId","setUserId","storedFirstName","localStorage","getItem","storedSurname","storedUserId","parseInt","fetchMonthlyTotalRevenue","response","get","revenues","data","currentMonth","Date","getMonth","totalForMonth","filter","revenue","date","reduce","total","amount","error","console","fetchMonthlyTotalExpenses","expenses","expense","netBalance","fetchData","revenueResponse","currentMonthRevenues","totalRevenues","acc","expenseResponse","currentMonthExpenses","totalExpenses","mergedTransactions","map","type","sortedTransactions","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","length","transaction","toLocaleDateString","description","id","_c","$RefreshReg$"],"sources":["C:/Users/tadiwa.muguta/Desktop/Projects/Finance Management/financial_management_app/react-frontend/src/Components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport '../Styling/Home.css';\r\n\r\nfunction Home() {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n    const [totalExpense, setTotalExpense] = useState(0);\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Retrieve the user's first name and surname from localStorage when the component mounts\r\n        const storedFirstName = localStorage.getItem('firstName');\r\n        const storedSurname = localStorage.getItem('surname');\r\n        const storedUserId = localStorage.getItem('id');\r\n\r\n        if (storedFirstName) {\r\n            setFirstName(storedFirstName);\r\n        }\r\n        if (storedSurname) {\r\n            setSurname(storedSurname)\r\n        }\r\n        if (storedUserId) {\r\n            setUserId(parseInt(storedUserId, 10));\r\n        }\r\n    }, []);\r\n\r\n    // Fetch and calculate total revenue for the current month\r\n    useEffect(() => {\r\n        const fetchMonthlyTotalRevenue = async () => {\r\n            if (userId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\r\n                    const revenues = response.data;\r\n\r\n                    const currentMonth = new Date().getMonth();\r\n                    const totalForMonth = revenues\r\n                        .filter((revenue) => new Date(revenue.date).getMonth() === currentMonth)\r\n                        .reduce((total, revenue) => total + revenue.amount, 0);\r\n\r\n                    setTotalRevenue(totalForMonth);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching revenues: \", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchMonthlyTotalRevenue();\r\n    }, [userId]);\r\n\r\n    // Fetch and calculate total expenses for the current month\r\n    useEffect(() => {\r\n        const fetchMonthlyTotalExpenses = async () => {\r\n            if (userId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\r\n                    const expenses = response.data;\r\n\r\n                    const currentMonth = new Date().getMonth();\r\n                    const totalForMonth = expenses\r\n                        .filter((expense) => new Date(expense.date).getMonth() === currentMonth)\r\n                        .reduce((total, expense) => total + expense.amount, 0);\r\n\r\n                    setTotalExpense(totalForMonth);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching expenses: \", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchMonthlyTotalExpenses();\r\n    }, [userId]);\r\n\r\n    // Calculate the net balance\r\n    const netBalance = totalRevenue - totalExpense;\r\n\r\n    // Fetch all transactions to display summary (Of the current month) on home page \r\n    useEffect(() => {\r\n        const currentMonth = new Date().getMonth() + 1; // Get current month (January = 0)\r\n\r\n        // Fetch total revenue and expense for the user\r\n        const fetchData = async () => {\r\n            if (userId) {\r\n                try {\r\n                    // Fetch revenues for the current month\r\n                    const revenueResponse = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\r\n                    const currentMonthRevenues = revenueResponse.data.filter(revenue => new Date(revenue.date).getMonth() + 1 === currentMonth);\r\n                    const totalRevenues = currentMonthRevenues.reduce((acc, revenue) => acc + revenue.amount, 0);\r\n                    setTotalRevenue(totalRevenues);\r\n\r\n                    // Fetch expenses for the current month\r\n                    const expenseResponse = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\r\n                    const currentMonthExpenses = expenseResponse.data.filter(expense => new Date(expense.date).getMonth() + 1 === currentMonth);\r\n                    const totalExpenses = currentMonthExpenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n                    setTotalExpense(totalExpenses);\r\n\r\n                    // Combine revenues and expenses into one list\r\n                    const mergedTransactions = [\r\n                        ...currentMonthRevenues.map(revenue => ({ ...revenue, type: 'Revenue' })),\r\n                        ...currentMonthExpenses.map(expense => ({ ...expense, type: 'Expense' }))\r\n                    ];\r\n\r\n                    // Sort by date in descending order (most recent first)\r\n                    const sortedTransactions = mergedTransactions.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n                    // Store transactions in state\r\n                    setTransactions(sortedTransactions);\r\n\r\n                } catch (error) {\r\n                    console.error('Error fetching data:', error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"homeContainer\">\r\n            {/* Use Sidebar component */}\r\n            <Sidebar />\r\n\r\n            {/* Right Content Area */}\r\n            <div className=\"content\">\r\n                <h2>Welcome, {firstName} {surname}!</h2>\r\n                \r\n                {/* Placeholder for additional content */}\r\n                <div className=\"summarySection\">\r\n                    <h3>Dashboard Summary</h3>\r\n                    <div className=\"dashboard\">\r\n                        <div className=\"summary\">\r\n                            <h4>\r\n                                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\r\n                                Total Revenues (Current Month)\r\n                            </h4>\r\n                            <p className=\"totalRevenue\">R{totalRevenue.toLocaleString()}</p>\r\n                        </div>\r\n                        <div className=\"summary\">\r\n                            <h4>\r\n                                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>\r\n                                Total Expenses (Current Month)\r\n                            </h4>\r\n                            <p className=\"totalExpense\">R{totalExpense.toLocaleString()}</p>\r\n                        </div>\r\n                        <div className=\"summary\">\r\n                            <h4>\r\n                                <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\r\n                                Net Balance\r\n                            </h4>\r\n                            <p className={netBalance > 0 ? 'positiveBalance' : netBalance < 0 ? 'negativeBalance' : 'zeroBalance'}>\r\n                                R{netBalance.toLocaleString()}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* New Section for Transactions and Monthly Statistics */}\r\n                <div className=\"transactionsStatsSection\">\r\n                    <div className=\"transactions\">\r\n                        <h4>Transactions</h4>\r\n                        <br/><br/>\r\n                        {transactions.length > 0 ? (\r\n                            <ul>\r\n                                {transactions.map((transaction) => (\r\n                                    <li key={transaction.id}>\r\n                                        <span>{new Date(transaction.date).toLocaleDateString()}</span> - \r\n                                        <span> {transaction.type} </span> - \r\n                                        <span> {transaction.description} </span> - \r\n                                        <span> R{transaction.amount.toLocaleString()} </span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No transactions for the currents month</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"monthlyStatistics\">\r\n                        <h4>Monthly Statistics</h4>\r\n                        <br/><br/>\r\n                        {/* Placeholder for monthly statistics content */}\r\n                        <p>Statistics for the month will go here.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}