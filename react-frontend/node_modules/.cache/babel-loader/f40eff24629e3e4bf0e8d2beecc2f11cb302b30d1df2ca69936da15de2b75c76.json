{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tadiwa.muguta\\\\Desktop\\\\Projects\\\\Finance Management\\\\financial_management_app\\\\react-frontend\\\\src\\\\Components\\\\BudgetGoals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Sidebar from \"./Sidebar\";\nimport TopNav from \"./TopNav\";\nimport AddBudgetModal from \"./AddBudgetModal\";\nimport \"../Styling/BudgetGoals.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Budget() {\n  _s();\n  const [budgets, setBudgets] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n  const [editingBudget, setEditingBudget] = useState(null); // State to hold expense data for editing\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false); // State to control the success message visibility\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n\n  // Fetch user ID from localStorage when the component mounts\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('id'); // Assuming userId is stored in localStorage\n    if (storedUserId) {\n      setUserId(parseInt(storedUserId, 10)); // Convert userId to an integer\n    }\n  }, []);\n\n  // Fetch budget goals for the logged-in user when userId is available\n  useEffect(() => {\n    if (userId) {\n      const fetchBudgetGoals = async () => {\n        try {\n          const response = await axios.get(`http://localhost:8080/budget/user/${userId}`);\n          setBudgets(response.data);\n        } catch (error) {\n          console.error(\"Error fetching budget goals:\", error);\n        }\n      };\n      fetchBudgetGoals();\n    }\n  }, [userId]); // Dependency on userId, fetch data once it's available\n\n  // Sort budgets by date in descending order (most recent first)\n  const sortedBudgets = [...budgets].sort((a, b) => new Date(b.id) - new Date(a.id));\n\n  // Function to handle adding a budget goal\n  const handleAddBudget = async newBudget => {\n    try {\n      const response = await axios.post('http://localhost:8080/budget', {\n        ...newBudget,\n        user: {\n          id: userId\n        } // Include user ID in the request\n      });\n      console.log(response.data); // Log the response (optional)\n      setBudgets(prevBudgets => [...prevBudgets, newBudget]); // Update the state\n    } catch (error) {\n      if (error.response) {\n        throw error.response.data; // Return server validation error\n      } else {\n        // eslint-disable-next-line\n        throw 'An error occurred while creating the budget.';\n      }\n    }\n  };\n\n  // Function to handle editing a budget goal\n  const handleEditBudget = async editedBudget => {\n    try {\n      const response = await axios.put(`http://localhost:8080/budget/${editingBudget.id}`, {\n        ...editedBudget,\n        user: {\n          id: userId\n        }\n      });\n      // Update the state with the updated budget\n      setBudgets(prevBudgets => prevBudgets.map(bud => bud.id === editingBudget.id ? response.data : bud));\n      setEditingBudget(null); // Reset editing budget\n    } catch (error) {\n      if (error.response) {\n        throw error.response.data; // Return server validation error\n      } else {\n        // eslint-disable-next-line\n        throw 'An error occurred while creating the budget.';\n      }\n    }\n  };\n\n  // Open the modal to add new expense (ensure fields are reset)\n  const handleAddClick = () => {\n    setEditingBudget(null); // Reset editingExpense to ensure the form is empty\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Open the modal to edit the selected expense\n  const handleEditClick = () => {\n    const budgetToEdit = sortedBudgets.find(budget => budget.id);\n    setEditingBudget(budgetToEdit); // Set the expense to be edited\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Handle delete action\n  const handleDelete = async id => {\n    // Confirm the user wants to delete the budget goal\n    if (window.confirm('Are you sure you want to delete? This action cannot be undone.')) {\n      try {\n        await axios.delete(`http://localhost:8080/budget/${id}`);\n        setBudgets(sortedBudgets.filter(budget => budget.id !== id)); // Update UI after delete\n\n        console.log(\"Successfully deleted the budget goal\");\n\n        // Show success message and auto-hide after 3 seconds\n        setShowSuccessMessage(true);\n        setTimeout(() => {\n          setShowSuccessMessage(false);\n        }, 3000); // Hide message after 3 seconds\n      } catch (error) {\n        console.error(\"Error deleting budget goal:\", error);\n        alert(\"Failed to delete budget goal\");\n      }\n    }\n  };\n\n  // Modify the onClose function to unselect the selected expense\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setEditingBudget(null);\n  };\n  React.useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [windowWidth > 650 ? /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Monthly Budget Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-list\",\n        children: sortedBudgets.length > 0 ? sortedBudgets.map((budget, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-pencil edit-icon\",\n            onClick: handleEditClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [budget.month, \" \", budget.year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Minimum Revenue Goal: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R\", budget.minRevenue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Maximum Expense Goal: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R\", budget.maxExpense]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Net Balance Goal: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R\", budget.netBalanceGoal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash delete-icon\",\n            onClick: () => handleDelete(budget.id),\n            title: \"Delete Budget Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No budget goals found. Create one to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"successMessage\",\n        children: \"Successfully deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budgetButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addBudgetButton\",\n          onClick: handleAddClick,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), \" Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddBudgetModal, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        onAddBudget: editingBudget ? handleEditBudget : handleAddBudget,\n        editingBudget: editingBudget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(Budget, \"VSGWAjqWoqMZmoyqFgcDG7TL2WE=\");\n_c = Budget;\nexport default Budget;\nvar _c;\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useEffect","useState","axios","Sidebar","TopNav","AddBudgetModal","jsxDEV","_jsxDEV","Budget","_s","budgets","setBudgets","userId","setUserId","isModalOpen","setIsModalOpen","editingBudget","setEditingBudget","showSuccessMessage","setShowSuccessMessage","windowWidth","setWindowWidth","window","innerWidth","storedUserId","localStorage","getItem","parseInt","fetchBudgetGoals","response","get","data","error","console","sortedBudgets","sort","a","b","Date","id","handleAddBudget","newBudget","post","user","log","prevBudgets","handleEditBudget","editedBudget","put","map","bud","handleAddClick","handleEditClick","budgetToEdit","find","budget","handleDelete","confirm","delete","filter","setTimeout","alert","handleCloseModal","handleResize","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onClick","month","year","minRevenue","maxExpense","netBalanceGoal","title","isOpen","onClose","onAddBudget","_c","$RefreshReg$"],"sources":["C:/Users/tadiwa.muguta/Desktop/Projects/Finance Management/financial_management_app/react-frontend/src/Components/BudgetGoals.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport TopNav from \"./TopNav\";\r\nimport AddBudgetModal from \"./AddBudgetModal\";\r\nimport \"../Styling/BudgetGoals.css\";\r\n\r\nfunction Budget() {\r\n    const [budgets, setBudgets] = useState([]);\r\n    const [userId, setUserId] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\r\n    const [editingBudget, setEditingBudget] = useState(null); // State to hold expense data for editing\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false); // State to control the success message visibility\r\n    const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\r\n\r\n    // Fetch user ID from localStorage when the component mounts\r\n    useEffect(() => {\r\n        const storedUserId = localStorage.getItem('id'); // Assuming userId is stored in localStorage\r\n        if (storedUserId) {\r\n            setUserId(parseInt(storedUserId, 10)); // Convert userId to an integer\r\n        }\r\n    }, []);\r\n\r\n    // Fetch budget goals for the logged-in user when userId is available\r\n    useEffect(() => {\r\n        if (userId) {\r\n            const fetchBudgetGoals = async () => {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8080/budget/user/${userId}`);\r\n                    setBudgets(response.data);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching budget goals:\", error);\r\n                }\r\n            };\r\n\r\n            fetchBudgetGoals();\r\n        }\r\n    }, [userId]); // Dependency on userId, fetch data once it's available\r\n\r\n    // Sort budgets by date in descending order (most recent first)\r\n    const sortedBudgets = [...budgets].sort((a, b) => new Date(b.id) - new Date(a.id));\r\n\r\n    // Function to handle adding a budget goal\r\n    const handleAddBudget = async (newBudget) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/budget', {\r\n                ...newBudget,\r\n                user: { id: userId } // Include user ID in the request\r\n            });\r\n            console.log(response.data); // Log the response (optional)\r\n            setBudgets((prevBudgets) => [...prevBudgets, newBudget]); // Update the state\r\n        } catch (error) {\r\n            if (error.response) {\r\n                throw error.response.data;  // Return server validation error\r\n            } else {\r\n                // eslint-disable-next-line\r\n                throw 'An error occurred while creating the budget.';\r\n            }            \r\n        }\r\n    };\r\n\r\n    // Function to handle editing a budget goal\r\n    const handleEditBudget = async (editedBudget) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/budget/${editingBudget.id}`, {\r\n                ...editedBudget,\r\n                user: { id: userId }\r\n            });\r\n            // Update the state with the updated budget\r\n            setBudgets((prevBudgets) => \r\n                prevBudgets.map(bud => bud.id === editingBudget.id ? response.data : bud)\r\n            );\r\n            setEditingBudget(null); // Reset editing budget\r\n        } catch (error) {\r\n            if (error.response) {\r\n                throw error.response.data;  // Return server validation error\r\n            } else {\r\n                // eslint-disable-next-line\r\n                throw 'An error occurred while creating the budget.';\r\n            }            \r\n        }\r\n    };\r\n\r\n    // Open the modal to add new expense (ensure fields are reset)\r\n    const handleAddClick = () => {\r\n        setEditingBudget(null); // Reset editingExpense to ensure the form is empty\r\n        setIsModalOpen(true); // Open the modal\r\n    };\r\n\r\n    // Open the modal to edit the selected expense\r\n    const handleEditClick = () => {\r\n        const budgetToEdit = sortedBudgets.find(budget => budget.id);\r\n        setEditingBudget(budgetToEdit); // Set the expense to be edited\r\n        setIsModalOpen(true); // Open the modal\r\n    };\r\n\r\n    // Handle delete action\r\n    const handleDelete = async (id) => {\r\n        // Confirm the user wants to delete the budget goal\r\n        if (window.confirm('Are you sure you want to delete? This action cannot be undone.')) {\r\n            try {\r\n                await axios.delete(`http://localhost:8080/budget/${id}`);\r\n                setBudgets(sortedBudgets.filter((budget) => budget.id !== id)); // Update UI after delete\r\n                \r\n                console.log(\"Successfully deleted the budget goal\");\r\n\r\n                // Show success message and auto-hide after 3 seconds\r\n                setShowSuccessMessage(true);\r\n                setTimeout(() => {\r\n                    setShowSuccessMessage(false);\r\n                }, 3000); // Hide message after 3 seconds\r\n            } catch (error) {\r\n                console.error(\"Error deleting budget goal:\", error);\r\n                alert(\"Failed to delete budget goal\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // Modify the onClose function to unselect the selected expense\r\n    const handleCloseModal = () => {\r\n        setIsModalOpen(false);\r\n        setEditingBudget(null);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"budget-container\">\r\n            {/* Conditional rendering of Sidebar or TopNav */}\r\n            {windowWidth > 650 ? <Sidebar /> : <TopNav />}\r\n\r\n            {/* Right Content Area */}\r\n            <div className=\"budget-content\">\r\n                <h2>Your Monthly Budget Goals</h2>\r\n\r\n                <div className=\"budget-list\">\r\n                    {sortedBudgets.length > 0 ? (\r\n                        sortedBudgets.map((budget, index) => (\r\n                            <div key={index} className=\"budget-item\">\r\n                                <i \r\n                                    className=\"fa fa-pencil edit-icon\" \r\n                                    onClick={handleEditClick}\r\n                                ></i>\r\n                                <h3><strong>{budget.month} {budget.year}</strong></h3>\r\n                                <p>Minimum Revenue Goal: <strong>R{budget.minRevenue}</strong></p>\r\n                                <p>Maximum Expense Goal: <strong>R{budget.maxExpense}</strong></p>\r\n                                <p>Net Balance Goal: <strong>R{budget.netBalanceGoal}</strong></p>\r\n\r\n                                {/* Delete icon */}\r\n                                <i\r\n                                    className=\"fa fa-trash delete-icon\"\r\n                                    onClick={() => handleDelete(budget.id)}\r\n                                    title=\"Delete Budget Goal\"\r\n                                ></i>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>No budget goals found. Create one to get started!</p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Success message */}\r\n                {showSuccessMessage && (\r\n                    <div className=\"successMessage\">\r\n                        Successfully deleted\r\n                    </div>\r\n                )}\r\n\r\n                {/* Buttons Section */}\r\n                <div className=\"budgetButtons\">\r\n                    <button className=\"addBudgetButton\" onClick={handleAddClick}>\r\n                        <i className=\"fa fa-plus\"></i> Add\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Add Budget Modal */}\r\n                <AddBudgetModal\r\n                    isOpen={isModalOpen}\r\n                    onClose={handleCloseModal}\r\n                    onAddBudget={editingBudget ? handleEditBudget : handleAddBudget}\r\n                    editingBudget={editingBudget}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Budget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}