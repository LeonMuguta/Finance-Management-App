{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tadiwa.muguta\\\\Desktop\\\\Projects\\\\Finance Management\\\\financial_management_app\\\\react-frontend\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Sidebar from \"./Sidebar\";\nimport TopNav from \"./TopNav\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport '../Styling/Home.css';\n\n// Register the necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement, Tooltip, Legend);\nfunction Home({\n  setIsAuthenticated\n}) {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [goalData, setGoalData] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n  useEffect(() => {\n    const storedFirstName = localStorage.getItem('firstName');\n    const storedSurname = localStorage.getItem('surname');\n    const storedUserId = localStorage.getItem('id');\n    if (storedFirstName) {\n      setFirstName(storedFirstName);\n    }\n    if (storedSurname) {\n      setSurname(storedSurname);\n    }\n    if (storedUserId) {\n      setUserId(parseInt(storedUserId, 10));\n    }\n  }, []);\n\n  // Fetch and calculate total revenue for the current month\n  useEffect(() => {\n    const fetchMonthlyTotalRevenue = async () => {\n      if (userId) {\n        try {\n          const response = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\n          const revenues = response.data;\n          const currentMonth = new Date().getMonth();\n          const totalForMonth = revenues.filter(revenue => new Date(revenue.date).getMonth() === currentMonth).reduce((total, revenue) => total + revenue.amount, 0);\n          setTotalRevenue(totalForMonth);\n        } catch (error) {\n          console.error(\"Error fetching revenues: \", error);\n        }\n      }\n    };\n    fetchMonthlyTotalRevenue();\n  }, [userId]);\n\n  // Fetch and calculate total expenses for the current month\n  useEffect(() => {\n    const fetchMonthlyTotalExpenses = async () => {\n      if (userId) {\n        try {\n          const response = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\n          const expenses = response.data;\n          const currentMonth = new Date().getMonth();\n          const totalForMonth = expenses.filter(expense => new Date(expense.date).getMonth() === currentMonth).reduce((total, expense) => total + expense.amount, 0);\n          setTotalExpense(totalForMonth);\n        } catch (error) {\n          console.error(\"Error fetching expenses: \", error);\n        }\n      }\n    };\n    fetchMonthlyTotalExpenses();\n  }, [userId]);\n\n  // Calculate the net balance\n  const netBalance = totalRevenue - totalExpense;\n  const netPercentage = totalExpense / totalRevenue * 100;\n\n  // Fetch all transactions to display summary (Of the current month) on home page \n  useEffect(() => {\n    const currentMonth = new Date().getMonth() + 1; // Get current month (January = 0)\n\n    // Fetch total revenue and expense for the user\n    const fetchData = async () => {\n      if (userId) {\n        try {\n          // Fetch revenues for the current month\n          const revenueResponse = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\n          const currentMonthRevenues = revenueResponse.data.filter(revenue => new Date(revenue.date).getMonth() + 1 === currentMonth);\n          const totalRevenues = currentMonthRevenues.reduce((acc, revenue) => acc + revenue.amount, 0);\n          setTotalRevenue(totalRevenues);\n\n          // Fetch expenses for the current month\n          const expenseResponse = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\n          const currentMonthExpenses = expenseResponse.data.filter(expense => new Date(expense.date).getMonth() + 1 === currentMonth);\n          const totalExpenses = currentMonthExpenses.reduce((acc, expense) => acc + expense.amount, 0);\n          setTotalExpense(totalExpenses);\n\n          // Combine revenues and expenses into one list\n          const mergedTransactions = [...currentMonthRevenues.map(revenue => ({\n            ...revenue,\n            type: 'Revenue'\n          })), ...currentMonthExpenses.map(expense => ({\n            ...expense,\n            type: 'Expense'\n          }))];\n\n          // Sort by date in descending order (most recent first)\n          const sortedTransactions = mergedTransactions.sort((a, b) => new Date(b.date) - new Date(a.date));\n\n          // Store transactions in state\n          setTransactions(sortedTransactions);\n        } catch (error) {\n          console.error('Error fetching transactions:', error);\n        }\n      }\n    };\n    fetchData();\n  }, [userId]);\n\n  // Fetch goal data for the dashboard\n  useEffect(() => {\n    const fetchGoalData = async () => {\n      if (userId) {\n        try {\n          const response = await axios.get(`http://localhost:8080/budget/user/${userId}`);\n\n          // Get the current month\n          const currentMonth = new Date().toLocaleString('default', {\n            month: 'long'\n          }).toUpperCase();\n\n          // Filter the goal data for the current month\n          const filteredGoals = response.data.filter(goal => goal.month === currentMonth);\n          setGoalData(filteredGoals[0]);\n        } catch (error) {\n          console.error(\"Error fetching budget goals: \", error);\n        }\n      }\n    };\n    fetchGoalData();\n  }, [userId]);\n  React.useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeContainer\",\n    children: [windowWidth > 650 ? /*#__PURE__*/_jsxDEV(Sidebar, {\n      setIsAuthenticated: setIsAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(TopNav, {\n      setIsAuthenticated: setIsAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 88\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", firstName, \" \", surname, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summarySection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dashboard Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-up\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), \"Total Revenues (Current Month)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"totalRevenue\",\n              children: [\"R\", totalRevenue.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-down\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), \"Total Expenses (Current Month)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"totalExpense\",\n              children: [\"R\", totalExpense.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-check-circle\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), \"Net Balance\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: netPercentage < 50 ? 'positiveBalance' : netPercentage >= 50 && netPercentage < 75 ? 'yellowWarning' : netPercentage >= 75 && netPercentage < 89 ? 'orangeWarning' : netPercentage >= 89 ? 'negativeBalance' : 'zeroBalance',\n              children: [\"R\", netBalance.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goalsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Monthly Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), goalData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goalsSummary\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: goalData.minRevenue < totalRevenue ? 'positiveAmount' : 'negativeAmount',\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-bullseye\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 117\n            }, this), \" Revenue Goal: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R\", goalData.minRevenue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 185\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: goalData.maxExpense > totalExpense ? 'positiveAmount' : 'negativeAmount',\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-bullseye\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 117\n            }, this), \" Expense Limit: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R\", goalData.maxExpense]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 186\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: goalData.netBalanceGoal < netBalance ? 'positiveAmount' : 'negativeAmount',\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-bullseye\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 119\n            }, this), \" Net Balance Goal: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R\", goalData.netBalanceGoal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 191\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No budget goals set for the current month...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactionsStatsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transactions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"transactionTable\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(transaction.date).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: transaction.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: transaction.type === 'Revenue' ? 'positiveAmount' : 'negativeAmount',\n                  children: [\"R\", transaction.amount.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 45\n                }, this)]\n              }, transaction.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No transactions for the current month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthlyStatistics\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Monthly Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: {\n              labels: ['Total Revenue', 'Total Expenses'],\n              datasets: [{\n                data: [totalRevenue, totalExpense],\n                backgroundColor: ['#36A2EB', '#FF6384']\n              }]\n            },\n            options: {\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top'\n                },\n                title: {\n                  display: true,\n                  text: 'Revenue vs Expenses'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"qPqRg7zESUwx/DDKmj/bXflMGpI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","Sidebar","TopNav","Pie","Chart","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","Home","setIsAuthenticated","_s","firstName","setFirstName","surname","setSurname","totalRevenue","setTotalRevenue","totalExpense","setTotalExpense","transactions","setTransactions","goalData","setGoalData","userId","setUserId","windowWidth","setWindowWidth","window","innerWidth","storedFirstName","localStorage","getItem","storedSurname","storedUserId","parseInt","fetchMonthlyTotalRevenue","response","get","revenues","data","currentMonth","Date","getMonth","totalForMonth","filter","revenue","date","reduce","total","amount","error","console","fetchMonthlyTotalExpenses","expenses","expense","netBalance","netPercentage","fetchData","revenueResponse","currentMonthRevenues","totalRevenues","acc","expenseResponse","currentMonthExpenses","totalExpenses","mergedTransactions","map","type","sortedTransactions","sort","a","b","fetchGoalData","toLocaleString","month","toUpperCase","filteredGoals","goal","handleResize","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","minRevenue","maxExpense","netBalanceGoal","length","transaction","toLocaleDateString","description","id","labels","datasets","backgroundColor","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["C:/Users/tadiwa.muguta/Desktop/Projects/Finance Management/financial_management_app/react-frontend/src/Components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport TopNav from \"./TopNav\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport '../Styling/Home.css';\r\n\r\n// Register the necessary Chart.js components\r\nChart.register(ArcElement, Tooltip, Legend);\r\n\r\nfunction Home({ setIsAuthenticated }) {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n    const [totalExpense, setTotalExpense] = useState(0);\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [goalData, setGoalData] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n    const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        const storedFirstName = localStorage.getItem('firstName');\r\n        const storedSurname = localStorage.getItem('surname');\r\n        const storedUserId = localStorage.getItem('id');\r\n\r\n        if (storedFirstName) {\r\n            setFirstName(storedFirstName);\r\n        }\r\n        if (storedSurname) {\r\n            setSurname(storedSurname)\r\n        }\r\n        if (storedUserId) {\r\n            setUserId(parseInt(storedUserId, 10));\r\n        }\r\n    }, []);\r\n\r\n    // Fetch and calculate total revenue for the current month\r\n    useEffect(() => {\r\n        const fetchMonthlyTotalRevenue = async () => {\r\n            if (userId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\r\n                    const revenues = response.data;\r\n\r\n                    const currentMonth = new Date().getMonth();\r\n                    const totalForMonth = revenues\r\n                        .filter((revenue) => new Date(revenue.date).getMonth() === currentMonth)\r\n                        .reduce((total, revenue) => total + revenue.amount, 0);\r\n\r\n                    setTotalRevenue(totalForMonth);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching revenues: \", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchMonthlyTotalRevenue();\r\n    }, [userId]);\r\n\r\n    // Fetch and calculate total expenses for the current month\r\n    useEffect(() => {\r\n        const fetchMonthlyTotalExpenses = async () => {\r\n            if (userId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\r\n                    const expenses = response.data;\r\n\r\n                    const currentMonth = new Date().getMonth();\r\n                    const totalForMonth = expenses\r\n                        .filter((expense) => new Date(expense.date).getMonth() === currentMonth)\r\n                        .reduce((total, expense) => total + expense.amount, 0);\r\n\r\n                    setTotalExpense(totalForMonth);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching expenses: \", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchMonthlyTotalExpenses();\r\n    }, [userId]);\r\n\r\n    // Calculate the net balance\r\n    const netBalance = totalRevenue - totalExpense;\r\n    const netPercentage = (totalExpense / totalRevenue) * 100;\r\n\r\n    // Fetch all transactions to display summary (Of the current month) on home page \r\n    useEffect(() => {\r\n        const currentMonth = new Date().getMonth() + 1; // Get current month (January = 0)\r\n\r\n        // Fetch total revenue and expense for the user\r\n        const fetchData = async () => {\r\n            if (userId) {\r\n                try {\r\n                    // Fetch revenues for the current month\r\n                    const revenueResponse = await axios.get(`http://localhost:8080/revenues/user/${userId}`);\r\n                    const currentMonthRevenues = revenueResponse.data.filter(revenue => new Date(revenue.date).getMonth() + 1 === currentMonth);\r\n                    const totalRevenues = currentMonthRevenues.reduce((acc, revenue) => acc + revenue.amount, 0);\r\n                    setTotalRevenue(totalRevenues);\r\n\r\n                    // Fetch expenses for the current month\r\n                    const expenseResponse = await axios.get(`http://localhost:8080/expenses/user/${userId}`);\r\n                    const currentMonthExpenses = expenseResponse.data.filter(expense => new Date(expense.date).getMonth() + 1 === currentMonth);\r\n                    const totalExpenses = currentMonthExpenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n                    setTotalExpense(totalExpenses);\r\n\r\n                    // Combine revenues and expenses into one list\r\n                    const mergedTransactions = [\r\n                        ...currentMonthRevenues.map(revenue => ({ ...revenue, type: 'Revenue' })),\r\n                        ...currentMonthExpenses.map(expense => ({ ...expense, type: 'Expense' }))\r\n                    ];\r\n\r\n                    // Sort by date in descending order (most recent first)\r\n                    const sortedTransactions = mergedTransactions.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n                    // Store transactions in state\r\n                    setTransactions(sortedTransactions);\r\n\r\n                } catch (error) {\r\n                    console.error('Error fetching transactions:', error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [userId]);\r\n\r\n    // Fetch goal data for the dashboard\r\n    useEffect(() => {\r\n        const fetchGoalData = async () => {\r\n            if (userId) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8080/budget/user/${userId}`);\r\n                    \r\n                    // Get the current month\r\n                    const currentMonth = new Date().toLocaleString('default', { month: 'long' }).toUpperCase();\r\n\r\n                    // Filter the goal data for the current month\r\n                    const filteredGoals = response.data.filter(goal => goal.month === currentMonth);\r\n\r\n                    setGoalData(filteredGoals[0]);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching budget goals: \", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchGoalData();\r\n    }, [userId]);\r\n\r\n    React.useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"homeContainer\">\r\n            {/* Conditional rendering of Sidebar or TopNav */}\r\n            {windowWidth > 650 ? <Sidebar setIsAuthenticated={setIsAuthenticated} /> : <TopNav setIsAuthenticated={setIsAuthenticated} />}\r\n\r\n            {/* Right Content Area */}\r\n            <div className=\"content\">\r\n                <h2>Welcome, {firstName} {surname}!</h2>\r\n                \r\n                {/* Placeholder for additional content */}\r\n                <div className=\"summarySection\">\r\n                    <h3>Dashboard Summary</h3>\r\n                    <div className=\"dashboard\">\r\n                        <div className=\"summary\">\r\n                            <h4>\r\n                                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\r\n                                Total Revenues (Current Month)\r\n                            </h4>\r\n                            <p className=\"totalRevenue\">R{totalRevenue.toLocaleString()}</p>\r\n                        </div>\r\n                        <div className=\"summary\">\r\n                            <h4>\r\n                                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>\r\n                                Total Expenses (Current Month)\r\n                            </h4>\r\n                            <p className=\"totalExpense\">R{totalExpense.toLocaleString()}</p>\r\n                        </div>\r\n                        <div className=\"summary\">\r\n                            <h4>\r\n                                <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\r\n                                Net Balance\r\n                            </h4>\r\n                            {/* <p className={netBalance > 0 ? 'positiveBalance' : netBalance < 0 ? 'negativeBalance' : 'zeroBalance'}>\r\n                                R{netBalance.toLocaleString()}\r\n                            </p> */}\r\n                            <p className={netPercentage < 50 ? 'positiveBalance' : netPercentage >= 50 && netPercentage < 75 ? 'yellowWarning' : netPercentage >= 75 && netPercentage < 89 ? 'orangeWarning' : netPercentage >= 89 ? 'negativeBalance' : 'zeroBalance'}>\r\n                                R{netBalance.toLocaleString()}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Goal Section */}\r\n                <div className=\"goalsSection\">\r\n                    <h3>Monthly Goals</h3>\r\n                    {goalData ? (\r\n                        <div className=\"goalsSummary\">\r\n                            <p className={goalData.minRevenue < totalRevenue ? 'positiveAmount' : 'negativeAmount'}><i className=\"fa fa-bullseye\" aria-hidden=\"true\"></i> Revenue Goal: <strong>R{goalData.minRevenue}</strong></p>\r\n                            <p className={goalData.maxExpense > totalExpense ? 'positiveAmount' : 'negativeAmount'}><i className=\"fa fa-bullseye\" aria-hidden=\"true\"></i> Expense Limit: <strong>R{goalData.maxExpense}</strong></p>\r\n                            <p className={goalData.netBalanceGoal < netBalance ? 'positiveAmount' : 'negativeAmount'}><i className=\"fa fa-bullseye\" aria-hidden=\"true\"></i> Net Balance Goal: <strong>R{goalData.netBalanceGoal}</strong></p>\r\n                        </div>\r\n                    ) : (\r\n                        <p>No budget goals set for the current month...</p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* New Section for Transactions and Monthly Statistics */}\r\n                <div className=\"transactionsStatsSection\">\r\n                    <div className=\"transactions\">\r\n                        <h4>Transactions</h4>\r\n                        <br/>\r\n                        {transactions.length > 0 ? (\r\n                            <table className=\"transactionTable\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Date</th>\r\n                                        <th>Description</th>\r\n                                        <th>Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {transactions.map((transaction) => (\r\n                                        <tr key={transaction.id}>\r\n                                            <td>{new Date(transaction.date).toLocaleDateString()}</td>\r\n                                            <td>{transaction.description}</td>\r\n                                            <td className={transaction.type === 'Revenue' ? 'positiveAmount' : 'negativeAmount'}>\r\n                                                R{transaction.amount.toLocaleString()}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No transactions for the current month</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"monthlyStatistics\">\r\n                        <h4>Monthly Statistics</h4>\r\n                        <br/>\r\n                        <Pie\r\n                            data={{\r\n                                labels: ['Total Revenue', 'Total Expenses'],\r\n                                datasets: [{\r\n                                    data: [totalRevenue, totalExpense],\r\n                                    backgroundColor: ['#36A2EB', '#FF6384'],\r\n                                }],\r\n                            }}\r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        position: 'top',\r\n                                    },\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'Revenue vs Expenses',\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}